{"version":3,"sources":["assets/blockstack-icon.svg","assets/logo-blackweb.png","UserInfo.js","redux/actions/signin-action.js","App.js","registerServiceWorker.js","config/history.js","mainPage.js","config/route.js","redux/actions/root.action.js","redux/reducers/user-reducer.js","redux/actions/event-actions.js","redux/reducers/product-reducer.js","redux/reducers/contact-reducer.js","redux/reducers/signin-reducer.js","redux/reducers/index.js","redux/store/index.js","index.js"],"names":["module","exports","__webpack_require__","p","UserInfo","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","a","createElement","className","class","src","user","image","contentUrl","name","Component","USER_LOGIN_DATA","blockstack","require","Meta","Card","axios","App","_this","showModal","setState","revokedIsVisible","blockStackModalIsVisible","handleOk","loading","handleCancel","showRevokeModal","revokeCertificateIsVisible","showBlockStackModal","handleblockStackModalOk","that","assertThisInitialized","put","blockstack_id","state","blockstackIdentity","email","blockStackEmail","then","response","console","log","showMessage","catch","error","handleblockStackModalCancel","onBlockStackModalNameChange","event","target","value","blockStackName","onBlockStackModalEmailChange","handleBlockStackModalSubmit","e","preventDefault","form","validateFields","err","values","text","type","message","success","warning","isSignedIn","checkSignedInStatus","certificates","person","undefined","userIdentity","displayCertificates","clickedCertificate","ID","achievementTitle","domain","coverImage","receiverName","blockstackID","issuerName","description","issueDate","revokedDate","reason","expirationDate","loadPerson","handleSignIn","bind","handleSignOut","isUserSignedIn","isSignInPending","handlePendingSignIn","userData","window","location","origin","username","loadUserData","identityAddress","get","concat","data","result","lookupProfile","USER_DATA","_this2","results","arr","displayCerts","map","cert","build","md","sm","card","onClick","cover","alt","avatar","title","achievement_title","alert","redirectToSignIn","signUserOut","href","style","display","encertLogo","es_button","blockstackLogo","input","placeholder","prefix","icon","color","onChange","src_UserInfo_0","modal","visible","onOk","onCancel","footer","key","connect","dispatch","payload","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","createBrowserHistory","Home","BasicRouting","react_router_dom","history","react_router","exact","path","component","LOGGEDIN","LOGGED_OUT","EDIT_OBJ","CONTACT_EDIT_DATA","INITIAL_STATE","is_login","token","EVENT_DETAILS","edit_obj","contact_data","user_data","combineReducers","user_reducer","arguments","length","action","objectSpread","productReducer","contact_reducer","signIn_reducer","persistedState","serializedState","sessionStorage","getItem","JSON","parse","loadFromLocalSotrage","store","createStore","rootReducer","applyMiddleware","thunk","subscribe","stringify","setItem","saveToLocalStorage","getState","ReactDOM","render","es","route","document","getElementById","URL","process","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.6769610c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/blockstack-icon.f96bc90c.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-blackweb.fcde0888.png\";","import React, { Component } from 'react';\n\nimport './UserInfo.css';\n\nclass UserInfo extends Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    return (\n      <div className=\"UserInfo\">\n        <img class=\"avatar\" src={\n            this.props.user && this.props.user.image\n              ? this.props.user.image[0].contentUrl\n              : \"/noprofilepicture.png\"\n          } />\n        <h1>{this.props.user && this.props.user.name}</h1>\n      </div>\n    )\n  }\n}\n\nexport default UserInfo;\n","\nexport const USER_LOGIN_DATA='USER_LOGIN_DATA'\n\nexport function USER_DATA(data) {\n  \n  console.log(data)\nreturn { type: USER_LOGIN_DATA, payload : data }\n}    \n","import React, { Component } from 'react';\nimport UserInfo from './UserInfo';\n\nimport { Card, Icon, Avatar, Modal, Button, Input, message } from 'antd';\n\nimport './App.css';\n\nimport { connect } from 'react-redux';\nimport { USER_DATA } from './redux/actions/signin-action';\nimport 'antd/dist/antd.css'\nimport blockstackLogo from './assets/blockstack-icon.svg'\nimport encertLogo from './assets/logo-blackweb.png'\nimport { Container, Row, Col } from 'react-grid-system';\n\nconst blockstack = require('blockstack');\nconst { Meta } = Card;\nconst axios = require('axios');\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    let isSignedIn = this.checkSignedInStatus();\n\n    this.state = {\n      certificates: [],\n      isSignedIn,\n      person: undefined,\n      revokedIsVisible: false,\n      blockStackModalIsVisible: false,\n      userIdentity: false,\n      blockstackIdentity: \"\",\n      blockStackEmail: \"\",\n      blockStackName: \"\",\n      displayCertificates: null,\n      clickedCertificate: {\n        ID: \"\",\n        achievementTitle: \"\",\n        domain: \"\",\n        coverImage: \"\",\n        receiverName: \"\",\n        blockstackID: \"\",\n        issuerName: \"\",\n        description: \"\",\n        issueDate: \"\",\n        revokedDate: \"\",\n        reason: \"\",\n        expirationDate: ''\n      },\n    };\n\n    if (isSignedIn) {\n      this.loadPerson();\n    }\n\n    this.handleSignIn = this.handleSignIn.bind(this)\n    this.handleSignOut = this.handleSignOut.bind(this)\n  }\n\n\n  checkSignedInStatus() {\n    if (blockstack.isUserSignedIn()) {\n      return true;\n    } else if (blockstack.isSignInPending()) {\n      blockstack.handlePendingSignIn().then(function (userData) {\n        window.location = window.location.origin\n      });\n      return false;\n    }\n  }\n\n  loadPerson() {\n    let username = blockstack.loadUserData().username\n    console.log(blockstack.loadUserData(), \"user data\");\n    let userData = blockstack.loadUserData();\n    // history.push('/home');\n\n    if (userData.identityAddress) {\n      // alert(\"Identity exists in server. \", userData.identityAddress);\n      let that = this;\n      axios.get(`https://encert-server.herokuapp.com/issuer/participant/exist/${userData.identityAddress}`, {\n      })\n        .then(function (response) {\n\n          console.log(\"Data exists for blockstack ID in server : \", response.data.data.result);\n          if (!response.data.data.result) {\n            that.setState({ blockStackModalIsVisible: true });\n          }\n\n\n          blockstack.lookupProfile(username).then((person) => {\n            that.setState({ person });\n            console.log(\"LOOKUP RETURNS: \", person);\n            that.props.USER_DATA(userData);\n          })\n\n          axios.get(\"https://encert-server.herokuapp.com/issuer/certificate/blockstack/\" + userData.identityAddress)\n            .then(function (response) {\n             console.log(\"Certificate Array is: \", response.data.data.results);\n              console.log(\"CERTIFICATES: \" + response.data.data.results);\n              let arr = response.data.data.results\n              let displayCerts = arr.map(cert => {\n                return (\n                    <Col md={3} sm={12}>\n                        <Card\n                        onClick={() => this.showModal()}\n                        // style={{ width: 300 }}\n                        cover={<img alt=\"example\" src=\"https://gw.alipayobjects.com/zos/rmsportal/JiqGstEfoWAOHiTxclqi.png\" />}\n                      // actions={[<Icon type=\"setting\" />, <Icon type=\"edit\" />, <Icon type=\"ellipsis\" />]}\n                      >\n                        <Meta\n                          avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\n                          title= {cert.achievement_title}\n                          description=\"This is the description\"\n                        />\n                      </Card>\n                    </Col>\n                  );\n              });\n              that.setState({\n                certificates: arr,\n                displayCertificates: displayCerts\n              })\n              console.log(that.state)\n            })\n\n            .catch(function (error) {\n              console.log(error);\n            });\n          console.log(that.state, \"state\");\n\n          that.setState({\n            userIdentity: true,\n            blockstackIdentity: userData.identityAddress\n          })\n        })\n        .catch(function (error) {\n          console.log(\"Error while fetching identity from server. \", error);\n        });\n    }\n    else {\n      alert(\"No identity found in server.\");\n    }\n  }\n\n  handleSignIn(event) {\n    event.preventDefault();\n    blockstack.redirectToSignIn()\n  }\n\n  handleSignOut(event) {\n    event.preventDefault();\n    blockstack.signUserOut(window.location.href)\n\n  }\n  showModal = () => {\n    // console.log(event);\n    this.setState({\n      revokedIsVisible: true,\n      blockStackModalIsVisible: true\n\n    });\n  }\n  handleOk = () => {\n    this.setState({ loading: false, revokedIsVisible: false });\n  }\n  handleCancel = () => {\n    this.setState({ revokedIsVisible: false });\n  }\n  showRevokeModal = () => {\n    this.setState({\n      revokeCertificateIsVisible: true,\n    });\n  }\n\n  showBlockStackModal = () => {\n    this.setState({\n      blockStackModalIsVisible: true\n    })\n  }\n\n  handleblockStackModalOk = () => {\n    this.setState({ loading: true });\n    let that = this;\n    axios.put(\"https://encert-server.herokuapp.com/issuer/participant/\", {\n      blockstack_id: this.state.blockstackIdentity,\n      email: this.state.blockStackEmail\n    })\n      .then(function (response) {\n        console.log(\"Server returned response for info insertion: \", response);\n        that.showMessage(\"Data submitted. Redirecting...\", \"success\");\n        that.setState({ loading: false, blockStackModalIsVisible: false });\n      })\n      .catch(function (error) {\n        console.log(\"Error inserting data: \", error);\n        that.showMessage(\"Error submitting data. Please check your information and retry.\", \"error\");\n        that.setState({ loading: false });\n      });\n\n  }\n\n  handleblockStackModalCancel = () => {\n    this.setState({ blockStackModalIsVisible: false });\n  }\n\n  onBlockStackModalNameChange = (event) => {\n    console.log(\"Received Input: \", event.target.value);\n    this.setState({\n      blockStackName: event.target.value\n    })\n  }\n\n  onBlockStackModalEmailChange = (event) => {\n    console.log(\"Received Input: \", event.target.value);\n    this.setState({\n      blockStackEmail: event.target.value\n    })\n  }\n\n  handleBlockStackModalSubmit = (e) => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n      }\n      else {\n        console.log(\"Validation succeeded! Submitting form.\");\n      }\n    });\n  }\n\n  showMessage = (text, type) => {\n\n    if (type == \"success\") {\n      message.success(text, 5000);\n    }\n    else if (type == \"warning\") {\n      message.warning(text, 5000);\n    }\n    else if (type == \"error\") {\n      message.error(text, 5000);\n    }\n    // else\n    // {\n    //   message.warning(text, 5000);\n    // }\n  };\n\n\n  render() {\n    // const { getFieldDecorator } = this.props.form;\n\n    return (\n      <div className=\"App\">\n\n        {/* <header className=\"App-header\">\n          <h1 className=\"App-title\">Encert</h1>\n        </header> */}\n        <header className=\"App-header\">\n          <h1 className=\"App-title\">Encert</h1>\n        </header>\n\n        <div className=\"signin-container\" style={{ display: this.state.isSignedIn ? 'none' : 'block' }}>\n          <div>\n            <img className=\"logo\" src={encertLogo} />\n          </div>\n\n          <Button className=\"signin-btn\" onClick={this.handleSignIn}>\n          <img className=\"blockstack-logo\" src={blockstackLogo} />\n          <span className=\"signin-btn-text\">\n          Sign-in with Blockstack\n          </span>\n          </Button>\n\n        </div>\n\n        <div style={{ display: !this.state.isSignedIn ? 'none' : 'absolute' }}>\n        {\n          !this.state.blockStackModalIsVisible ?\n          <div>\n            <div>\n            <UserInfo user={this.state.person} />\n            <button onClick={this.handleSignOut}>\n              Sign-out\n            </button>\n            </div>\n            <br />\n            <Container>\n            <Row>\n            {this.state.displayCertificates}\n            </Row>\n            </Container>\n            <br />\n            {/* <div>\n              <Card\n                onClick={() => this.showModal()}\n                style={{ width: 300 }}\n                cover={<img alt=\"example\" src=\"https://gw.alipayobjects.com/zos/rmsportal/JiqGstEfoWAOHiTxclqi.png\" />}\n              // actions={[<Icon type=\"setting\" />, <Icon type=\"edit\" />, <Icon type=\"ellipsis\" />]}\n              >\n                <Meta\n                  avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\n                  title=\"Card title\"\n                  description=\"This is the description\"\n                />\n              </Card>\n            </div> */}\n          </div>\n            :\n            <div>\n              <div>\n                <Input\n                  placeholder=\"Enter your email address\"\n                  prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  onChange={this.onBlockStackModalEmailChange}\n                />\n                <Button type=\"primary\" loading={this.state.loading} onClick={this.handleblockStackModalOk}>\n                  Click me!\n                </Button>\n              </div>\n\n              {/* <br /><br /> */}\n            </div>\n        }\n        </div>\n        \n        \n        <div>\n            <Modal\n              visible={this.state.revokedIsVisible}\n              title=\"Revoked Certificate Details\"\n              onOk={this.handleOk}\n              onCancel={this.handleCancel}\n              footer={[\n                <Button key=\"submit\" type=\"primary\" onClick={this.handleOk}>\n                  OK\n              </Button>,\n              ]}\n            >\n              <p>{`ID: ${this.state.clickedCertificate.ID}`}</p>\n              <p>{`Achievement Title:  ${this.state.clickedCertificate.achievementTitle}`}</p>\n              <p>{`Domain:  ${this.state.clickedCertificate.domain}`}</p>\n              <p>{`Cover Image: ${this.state.clickedCertificate.coverImage}`}</p>\n              <p>{`Receiver Name: ${this.state.clickedCertificate.receiverName}`}</p>\n              <p>{`Blockstack ID: ${this.state.clickedCertificate.blockstackID}`}</p>\n              <p>{`Issuer Name: ${this.state.clickedCertificate.issuerName}`}</p>\n              <p>{`Description: ${this.state.clickedCertificate.description}`}</p>\n              <p>{`Issue Date: ${this.state.clickedCertificate.issueDate}`}</p>\n              <p>{`Expiration Date: ${this.state.clickedCertificate.expirationDate}`}</p>\n            </Modal>\n          </div>\n      </div>\n    )\n  }\n}\n\n\nfunction mapDispatchToProp(dispatch) {\n  return ({\n    USER_DATA: (user) => {\n      dispatch(USER_DATA(user))\n    },\n  })\n}\n\n\nexport default connect(null, mapDispatchToProp)(App);\n\n// export default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import createBrowserHistory from 'history/createBrowserHistory'\n\nexport default createBrowserHistory();","import React, { Component } from 'react';\nimport UserInfo from './UserInfo';\n\nconst blockstack = require('blockstack');\n\n\nclass Home extends Component {\n    constructor(props){\n        super(props)\n        this.handleSignOut = this.handleSignOut.bind(this)\n    }\n\n    handleSignOut(event) {\n        event.preventDefault();\n        blockstack.signUserOut(window.location.href)\n    \n      }\n\n\n    render() {\n        console.log(\"here\")\n        return (\n            <div>\n                Home page      \n                <p style={{display: !this.state.isSignedIn ? 'none' : 'block' }}>\n          <UserInfo user={this.state.person} />\n          <button onClick={this.handleSignOut}>\n            Sign-out\n          </button>\n        </p>          \n            </div>\n        );\n    }\n}\n\nexport default Home;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  \n} from 'react-router-dom';\nimport history from './history';\nimport App from '../App'\nimport Home from '../mainPage'\n// history={history}\n\n// const Routing = () => {\n//   return (\n//     <HashRouter>\n//       <Structure/>\n//     </HashRouter>\n//   )\n// }\n\n// const Structure = () => {\n//   return( <div>\n//   <BasicRouting/>\n//   </div>\n//   )\n// }\n\n// componentDidUpdate() {\n//   window.scrollTo(0,0);\n// }\n// onUpdate={() => window.scrollTo(0, 0)}\nconst BasicRouting = () => {\n  // history.listen(_ => {\n  //     window.scrollTo(0, 0)  \n  //     })\n  return ( \n    //   <Router onUpdate={() => window.scrollTo(0, 0)} history={history}>\n      <Router  history={history}>\n    <div>\n       \n        \n            <Route exact path=\"/\" component={App} />\n            <Route exact path=\"/home\" component={Home} />\n            \n          \n            \n        \n        </div>\n    </Router>\n  )\n}\n\nexport default (BasicRouting);","\r\n\r\nexport const LOGGEDIN = 'LOGGEDIN';\r\nexport const LOGGED_OUT = 'LOGGED_OUT';\r\nexport const EDIT_OBJ = 'EDIT_OBJ';\r\nexport const CONTACT_EDIT_DATA = 'CONTACT_EDIT_DATA'\r\n\r\n  export function USER_LOGGEDIN(data){\r\n    console.log(data);\r\n    return { type: LOGGEDIN, payload : data }\r\n  }\r\n\r\n  export function USER_LOGGEDOUT(){\r\n    return { type: LOGGED_OUT }\r\n  }\r\n\r\n  export function EDIT_OBJ_DATA(data) {\r\n    return { type: EDIT_OBJ, payload : data }    \r\n  }\r\n  \r\n    export function CONTACT_DATA(data) {\r\n      console.log(data)\r\n    return { type: CONTACT_EDIT_DATA, payload : data }    \r\n  }\r\n  ","import { LOGGEDIN, LOGGED_OUT } from \"../actions/root.action\";\r\n\r\nconst INITIAL_STATE = {\r\n    email : '',\r\n    is_login : false,\r\n    token : ''\r\n} \r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case LOGGEDIN:\r\n        return({\r\n            ...state,\r\n            email : action.payload.user.email,\r\n            token : action.payload.token,\r\n            is_login : true\r\n        })\r\n        case LOGGED_OUT:\r\n        return({ \r\n            ...state,\r\n            is_login : false\r\n        })\r\n        default: \r\n        return state\r\n    }\r\n}","\r\n\r\nexport const EVENT_DETAILS = 'EVENT_DETAILS';\r\n  \r\n  export function DETAILS_OF_EVENT(data){\r\n    return { type: EVENT_DETAILS, payload : data }\r\n  }\r\n\r\n","import { EVENT_DETAILS } from \"../actions/event-actions\";\r\nimport { EDIT_OBJ } from \"../actions/root.action\";\r\n\r\nconst INITIAL_STATE = {\r\nedit_obj : {}\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case EVENT_DETAILS:\r\n        return({\r\n            ...action.payload\r\n        })\r\n        case EDIT_OBJ : \r\n        return({\r\n            edit_obj : action.payload\r\n        })\r\n        default: \r\n        return state\r\n    }\r\n}","import { CONTACT_EDIT_DATA } from \"../actions/root.action\";\n\nconst INITIAL_STATE = {\n    contact_data : {}\n} \n\nexport default (state = INITIAL_STATE, action) => {\n    console.log('====================================');\n    console.log(action.payload);\n    console.log('====================================');\n    switch (action.type) {\n        case CONTACT_EDIT_DATA:\n        return({\n            ...state,\n            contact_data : action.payload\n        })\n        default: \n        return state\n    }\n}","import { USER_LOGIN_DATA } from \"../actions/signin-action\";\n\nconst INITIAL_STATE = {\nuser_data : {}\n}\n\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case USER_LOGIN_DATA : \n        console.log(action.payload)\n        return({\n            user_data : action.payload\n        })\n        default: \n        return state\n    }\n}\n","// import reducer from './reducer';\r\nimport {combineReducers} from 'redux';\r\nimport userReducer from './user-reducer';\r\nimport productReducer from './product-reducer';\r\nimport contactReducer from './contact-reducer';\r\nimport SigninReducer from './signin-reducer'\r\n\r\nexport default combineReducers({\r\n    user_reducer : userReducer, \r\n    productReducer : productReducer,\r\n    contact_reducer : contactReducer,\r\n    signIn_reducer: SigninReducer\r\n});","import rootReducer from '../reducers';\r\nimport {createStore, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\n// Session Storage is used to persist Store in Redux\r\n\r\nfunction saveToLocalStorage(state){\r\n    try{\r\n        const serializedState = JSON.stringify(state);\r\n        sessionStorage.setItem('state', serializedState)\r\n    }\r\n    catch(e){\r\n        console.log(e);\r\n    }\r\n}\r\n\r\nfunction loadFromLocalSotrage (){\r\n    try{\r\n        const serializedState = sessionStorage.getItem('state')\r\n        if(serializedState === null) return undefined\r\n        return JSON.parse(serializedState)\r\n    }\r\n    catch(e){\r\n        console.log(e);\r\n    }\r\n}\r\n\r\n\r\nconst persistedState = loadFromLocalSotrage();\r\n\r\nconst store = createStore(\r\n    rootReducer, persistedState,\r\napplyMiddleware(thunk)\r\n);\r\n\r\nstore.subscribe(() => {saveToLocalStorage(store.getState())});\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport BasicRouting from './config/route'\nimport {Provider} from 'react-redux';\nimport store from './redux/store'; \n\n\n\nReactDOM.render(\n<Provider store={store}>  <BasicRouting /> </Provider> \n, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}